// Generated by view binder compiler. Do not edit!
package com.example.fyp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.gridlayout.widget.GridLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fyp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdminDashboardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnLogout;

  @NonNull
  public final GridLayout gridLayout;

  @NonNull
  public final CardView manageInventoryCard;

  @NonNull
  public final CardView manageOrdersCard;

  @NonNull
  public final CardView manageUsersCard;

  @NonNull
  public final TextView tvAdminTitle;

  @NonNull
  public final CardView viewReportsCard;

  private ActivityAdminDashboardBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnLogout, @NonNull GridLayout gridLayout,
      @NonNull CardView manageInventoryCard, @NonNull CardView manageOrdersCard,
      @NonNull CardView manageUsersCard, @NonNull TextView tvAdminTitle,
      @NonNull CardView viewReportsCard) {
    this.rootView = rootView;
    this.btnLogout = btnLogout;
    this.gridLayout = gridLayout;
    this.manageInventoryCard = manageInventoryCard;
    this.manageOrdersCard = manageOrdersCard;
    this.manageUsersCard = manageUsersCard;
    this.tvAdminTitle = tvAdminTitle;
    this.viewReportsCard = viewReportsCard;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdminDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdminDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admin_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdminDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLogout;
      Button btnLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnLogout == null) {
        break missingId;
      }

      id = R.id.gridLayout;
      GridLayout gridLayout = ViewBindings.findChildViewById(rootView, id);
      if (gridLayout == null) {
        break missingId;
      }

      id = R.id.manageInventoryCard;
      CardView manageInventoryCard = ViewBindings.findChildViewById(rootView, id);
      if (manageInventoryCard == null) {
        break missingId;
      }

      id = R.id.manageOrdersCard;
      CardView manageOrdersCard = ViewBindings.findChildViewById(rootView, id);
      if (manageOrdersCard == null) {
        break missingId;
      }

      id = R.id.manageUsersCard;
      CardView manageUsersCard = ViewBindings.findChildViewById(rootView, id);
      if (manageUsersCard == null) {
        break missingId;
      }

      id = R.id.tvAdminTitle;
      TextView tvAdminTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvAdminTitle == null) {
        break missingId;
      }

      id = R.id.viewReportsCard;
      CardView viewReportsCard = ViewBindings.findChildViewById(rootView, id);
      if (viewReportsCard == null) {
        break missingId;
      }

      return new ActivityAdminDashboardBinding((ConstraintLayout) rootView, btnLogout, gridLayout,
          manageInventoryCard, manageOrdersCard, manageUsersCard, tvAdminTitle, viewReportsCard);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
