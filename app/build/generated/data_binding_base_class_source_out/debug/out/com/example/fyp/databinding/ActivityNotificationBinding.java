// Generated by view binder compiler. Do not edit!
package com.example.fyp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fyp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNotificationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnDismissCashbackOffer;

  @NonNull
  public final Button btnDismissFlashSale;

  @NonNull
  public final Button btnDismissFreeDelivery;

  @NonNull
  public final Button btnDismissLimitedTimeDiscount;

  @NonNull
  public final Button btnDismissSpecialOffer;

  @NonNull
  public final CardView cashbackOfferLayout;

  @NonNull
  public final TextView cashbackOfferText;

  @NonNull
  public final CardView flashSaleLayout;

  @NonNull
  public final TextView flashSaleText;

  @NonNull
  public final CardView freeDeliveryLayout;

  @NonNull
  public final TextView freeDeliveryText;

  @NonNull
  public final CardView limitedTimeDiscountLayout;

  @NonNull
  public final TextView limitedTimeDiscountText;

  @NonNull
  public final CardView specialOfferLayout;

  @NonNull
  public final TextView specialOfferText;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView toolbarText;

  private ActivityNotificationBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnDismissCashbackOffer, @NonNull Button btnDismissFlashSale,
      @NonNull Button btnDismissFreeDelivery, @NonNull Button btnDismissLimitedTimeDiscount,
      @NonNull Button btnDismissSpecialOffer, @NonNull CardView cashbackOfferLayout,
      @NonNull TextView cashbackOfferText, @NonNull CardView flashSaleLayout,
      @NonNull TextView flashSaleText, @NonNull CardView freeDeliveryLayout,
      @NonNull TextView freeDeliveryText, @NonNull CardView limitedTimeDiscountLayout,
      @NonNull TextView limitedTimeDiscountText, @NonNull CardView specialOfferLayout,
      @NonNull TextView specialOfferText, @NonNull Toolbar toolbar, @NonNull TextView toolbarText) {
    this.rootView = rootView;
    this.btnDismissCashbackOffer = btnDismissCashbackOffer;
    this.btnDismissFlashSale = btnDismissFlashSale;
    this.btnDismissFreeDelivery = btnDismissFreeDelivery;
    this.btnDismissLimitedTimeDiscount = btnDismissLimitedTimeDiscount;
    this.btnDismissSpecialOffer = btnDismissSpecialOffer;
    this.cashbackOfferLayout = cashbackOfferLayout;
    this.cashbackOfferText = cashbackOfferText;
    this.flashSaleLayout = flashSaleLayout;
    this.flashSaleText = flashSaleText;
    this.freeDeliveryLayout = freeDeliveryLayout;
    this.freeDeliveryText = freeDeliveryText;
    this.limitedTimeDiscountLayout = limitedTimeDiscountLayout;
    this.limitedTimeDiscountText = limitedTimeDiscountText;
    this.specialOfferLayout = specialOfferLayout;
    this.specialOfferText = specialOfferText;
    this.toolbar = toolbar;
    this.toolbarText = toolbarText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNotificationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNotificationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_notification, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNotificationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDismissCashbackOffer;
      Button btnDismissCashbackOffer = ViewBindings.findChildViewById(rootView, id);
      if (btnDismissCashbackOffer == null) {
        break missingId;
      }

      id = R.id.btnDismissFlashSale;
      Button btnDismissFlashSale = ViewBindings.findChildViewById(rootView, id);
      if (btnDismissFlashSale == null) {
        break missingId;
      }

      id = R.id.btnDismissFreeDelivery;
      Button btnDismissFreeDelivery = ViewBindings.findChildViewById(rootView, id);
      if (btnDismissFreeDelivery == null) {
        break missingId;
      }

      id = R.id.btnDismissLimitedTimeDiscount;
      Button btnDismissLimitedTimeDiscount = ViewBindings.findChildViewById(rootView, id);
      if (btnDismissLimitedTimeDiscount == null) {
        break missingId;
      }

      id = R.id.btnDismissSpecialOffer;
      Button btnDismissSpecialOffer = ViewBindings.findChildViewById(rootView, id);
      if (btnDismissSpecialOffer == null) {
        break missingId;
      }

      id = R.id.cashbackOfferLayout;
      CardView cashbackOfferLayout = ViewBindings.findChildViewById(rootView, id);
      if (cashbackOfferLayout == null) {
        break missingId;
      }

      id = R.id.cashbackOfferText;
      TextView cashbackOfferText = ViewBindings.findChildViewById(rootView, id);
      if (cashbackOfferText == null) {
        break missingId;
      }

      id = R.id.flashSaleLayout;
      CardView flashSaleLayout = ViewBindings.findChildViewById(rootView, id);
      if (flashSaleLayout == null) {
        break missingId;
      }

      id = R.id.flashSaleText;
      TextView flashSaleText = ViewBindings.findChildViewById(rootView, id);
      if (flashSaleText == null) {
        break missingId;
      }

      id = R.id.freeDeliveryLayout;
      CardView freeDeliveryLayout = ViewBindings.findChildViewById(rootView, id);
      if (freeDeliveryLayout == null) {
        break missingId;
      }

      id = R.id.freeDeliveryText;
      TextView freeDeliveryText = ViewBindings.findChildViewById(rootView, id);
      if (freeDeliveryText == null) {
        break missingId;
      }

      id = R.id.limitedTimeDiscountLayout;
      CardView limitedTimeDiscountLayout = ViewBindings.findChildViewById(rootView, id);
      if (limitedTimeDiscountLayout == null) {
        break missingId;
      }

      id = R.id.limitedTimeDiscountText;
      TextView limitedTimeDiscountText = ViewBindings.findChildViewById(rootView, id);
      if (limitedTimeDiscountText == null) {
        break missingId;
      }

      id = R.id.specialOfferLayout;
      CardView specialOfferLayout = ViewBindings.findChildViewById(rootView, id);
      if (specialOfferLayout == null) {
        break missingId;
      }

      id = R.id.specialOfferText;
      TextView specialOfferText = ViewBindings.findChildViewById(rootView, id);
      if (specialOfferText == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.toolbarText;
      TextView toolbarText = ViewBindings.findChildViewById(rootView, id);
      if (toolbarText == null) {
        break missingId;
      }

      return new ActivityNotificationBinding((ConstraintLayout) rootView, btnDismissCashbackOffer,
          btnDismissFlashSale, btnDismissFreeDelivery, btnDismissLimitedTimeDiscount,
          btnDismissSpecialOffer, cashbackOfferLayout, cashbackOfferText, flashSaleLayout,
          flashSaleText, freeDeliveryLayout, freeDeliveryText, limitedTimeDiscountLayout,
          limitedTimeDiscountText, specialOfferLayout, specialOfferText, toolbar, toolbarText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
